import flet as ft
import threading
import time
import mediapipe as mp
import numpy as np
import pandas as pd
import cv2
import base64
import os

def hex_to_rgb(hex_string):
    r_hex = hex_string[1:3]
    g_hex = hex_string[3:5]
    b_hex = hex_string[5:7]
    return int(r_hex, 16), int(g_hex, 16), int(b_hex, 16)

cap = None
stop_recording = False

def process(cap=cap):
    # Define mediapipe pose detection module
    mp_pose = mp.solutions.pose
    mp_drawing = mp.solutions.drawing_utils

    # Initialize the pose detection module
    with mp_pose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5) as pose:
        # Create a dataframe to store the pose keypoints
        df_pose = pd.DataFrame()

        frame_rate = cap.get(cv2.CAP_PROP_FPS)  # Get the frame rate of the video
        capture_interval = int(frame_rate / 10)  # Capture a frame every second
        frame_count = 0
        image_list = []

        while True:
            # Read a frame from the video
            ret, frame = cap.read()

            # Break the loop if we have reached the end of the video or stop button is clicked
            if not ret or stop_recording:
                break

            frame_count += 1

            # Check if the frame count matches the capture interval
            if frame_count % capture_interval != 0:
                continue

            # Convert the frame to RGB and resize if needed
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

            # Process the frame to extract the pose keypoints
            results = pose.process(frame)

            # Extract the pose landmarks from the results
            landmarks = results.pose_landmarks

            # If landmarks are detected, draw them on the frame
            if landmarks is not None:

                # Draw the landmarks on the frame
                mp_drawing.draw_landmarks(frame, landmarks, mp_pose.POSE_CONNECTIONS,
                                           landmark_drawing_spec=mp_drawing.DrawingSpec(color=(128, 128, 128),
                                                                                         circle_radius=0),
                                           connection_drawing_spec=mp_drawing.DrawingSpec(color=(255, 255, 255),
                                                                                           thickness=2))

                # Add joint markers and lines
                joint_indices = {'Left Shoulder': 11, 'Left Elbow': 13, 'Left Wrist': 15,
                                 'Right Shoulder': 12, 'Right Elbow': 14, 'Right Wrist': 16,
                                 'Right Index': 20, 'Left Index': 19,
                                 'Left Hip': 23, 'Left Knee': 25, 'Left Ankle': 27,
                                 'Right Hip': 24, 'Right Knee': 26, 'Right Ankle': 28,
                                 'Right Foot Index': 32, 'Left Foot Index': 31}
                color_discrete_map={
                                    'Right Shoulder': '#ff8000',
                                    'Right Elbow': '#ffb266', 
                                    'Right Wrist': '#ffe5cc', 
                                    'Left Shoulder': '#ff0000',
                                    'Left Elbow': '#ff6666', 
                                    'Left Wrist': '#ffcccc',
                                    'Right Hip': '#7f00ff',
                                    'Right Knee': '#b266ff', 
                                    'Right Ankle': '#e5ccff',
                                    'Left Hip': '#0000ff',
                                    'Left Knee': '#6666ff', 
                                    'Left Ankle': '#ccccff'
                                    }

                for joint, idx in joint_indices.items():
                    x, y = int(landmarks.landmark[idx].x * frame.shape[1]), int(landmarks.landmark[idx].y * frame.shape[0])

                    # Assign colors to joint markers
                    if 'Left Shoulder' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Shoulder']) # Red
                    elif 'Left Elbow' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Elbow'])  # Orange
                    elif 'Left Wrist' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Wrist'])  # White
                    if 'Right Shoulder' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Shoulder'])  # Red
                    elif 'Right Elbow' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Elbow'])
                    elif 'Right Wrist' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Wrist'])
                    elif 'Left Hip' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Hip'])
                    elif 'Left Knee' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Knee'])
                    elif 'Left Ankle' in joint:
                        color = hex_to_rgb(color_discrete_map['Left Ankle'])
                    elif 'Right Hip' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Hip'])
                    elif 'Right Knee' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Knee'])
                    elif 'Right Ankle' in joint:
                        color = hex_to_rgb(color_discrete_map['Right Ankle'])

                    # Draw joint markers
                    cv2.circle(frame, (x, y), 2, color, -1)
                    def calculate_angle(landmarks, joint1, joint2, joint3):
                        # Get the landmarks for the specified joints
                        landmark1 = landmarks.landmark[joint_indices[joint1]]
                        landmark2 = landmarks.landmark[joint_indices[joint2]]
                        landmark3 = landmarks.landmark[joint_indices[joint3]]

                        # Calculate the vectors between the landmarks
                        vector1 = np.array([landmark1.x, landmark1.y])
                        vector2 = np.array([landmark2.x, landmark2.y])
                        vector3 = np.array([landmark3.x, landmark3.y])

                        # Calculate the vectors between joints
                        v1 = vector1 - vector2
                        v2 = vector3 - vector2

                        # Calculate the angle using dot product and magnitudes
                        angle = np.arccos(np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2)))

                        return np.degrees(angle)

                    # Calculate and display joint angles
                    if joint == 'Left Shoulder':
                        angle = calculate_angle(landmarks, 'Left Elbow', 'Left Shoulder', 'Left Hip')
                    elif joint == 'Left Elbow':
                        angle = calculate_angle(landmarks, 'Left Shoulder', 'Left Elbow', 'Left Wrist')
                    elif joint == 'Left Wrist':
                        angle = calculate_angle(landmarks, 'Left Elbow', 'Left Wrist', 'Left Index')
                    elif joint == 'Right Shoulder':
                        angle = calculate_angle(landmarks, 'Right Elbow', 'Right Shoulder', 'Right Hip')
                    elif joint == 'Right Elbow':
                        angle = calculate_angle(landmarks, 'Right Shoulder', 'Right Elbow', 'Right Wrist')
                    elif joint == 'Right Wrist':
                        angle = calculate_angle(landmarks, 'Right Elbow', 'Right Wrist', 'Right Index')
                    elif joint == 'Left Hip':
                        angle = calculate_angle(landmarks, 'Left Knee', 'Left Hip', 'Left Shoulder')
                    elif joint == 'Left Knee':
                        angle = calculate_angle(landmarks, 'Left Hip', 'Left Knee', 'Left Ankle')
                    elif joint == 'Left Ankle':
                        angle = calculate_angle(landmarks, 'Left Knee', 'Left Ankle', 'Left Foot Index')
                    elif joint == 'Right Hip':
                        angle = calculate_angle(landmarks, 'Right Knee', 'Right Hip', 'Right Shoulder')
                    elif joint == 'Right Knee':
                        angle = calculate_angle(landmarks, 'Right Hip', 'Right Knee', 'Right Ankle')
                    elif joint == 'Right Ankle':
                        angle = calculate_angle(landmarks, 'Right Knee', 'Right Ankle', 'Right Foot Index')
                    elif joint == 'Right Foot Index':
                        angle = ''
                    elif joint == 'Left Foot Index':
                        angle = ''
                    elif joint == 'Right Index':
                        angle = ''
                    elif joint == 'Left Index':
                        angle = ''
                    angletextcolor = 'White'
                    textscale = 1
                    textsize = 1
                    try:
                        if angletextcolor == 'Grey':
                            cv2.putText(frame, f'{angle:.2f}', (x + 10, y + 10), cv2.FONT_HERSHEY_SIMPLEX, textscale, (128, 128, 128), textsize)
                        if angletextcolor == 'White':
                            cv2.putText(frame, f'{angle:.2f}', (x + 10, y + 10), cv2.FONT_HERSHEY_SIMPLEX, textscale, (255, 255, 255), textsize)
                        if angletextcolor == 'Black':
                            cv2.putText(frame, f'{angle:.2f}', (x + 10, y + 10), cv2.FONT_HERSHEY_SIMPLEX, textscale, (0, 0, 0), textsize)
                    except:
                        continue


            frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)
            image_list.append(frame)

            # Create a dictionary to store the pose landmarks
            landmarks_dict = {}

            # If landmarks are detected, store them in the dictionary
            if landmarks is not None:
                for idx, landmark in enumerate(landmarks.landmark):
                    landmarks_dict[f'landmark_{idx}'] = [landmark.x, landmark.y, landmark.z, landmark.visibility]

            # Add the landmarks to the dataframe
            df_pose = df_pose.append(landmarks_dict, ignore_index=True)
    
            #output.release()
            
            # Convert the dataframe to seconds
            df_pose['Frame'] = df_pose.index / 10
            #diff = df_pose['Frame'].iloc[1] - df_pose['Frame'].iloc[0]
            data_points = len(df_pose)
            #time_interval = pd.Timedelta(seconds=diff)

            #df_pose['time'] = pd.date_range(start='00:00:00', periods=data_points, freq=time_interval)
            #df_pose = df_pose.set_index('time')
            #print(landmarks_dict)
            return frame, df_pose
        
def calculate_joint_angles(df_pose):
    # Define the joint angle calculation function
    def get_joint_angle(p1, p2, p3):
        v1 = np.array([p1[0] - p2[0], p1[1] - p2[1]])
        v2 = np.array([p3[0] - p2[0], p3[1] - p2[1]])
        cosine_angle = np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2))
        angle = np.arccos(cosine_angle) 
        return np.degrees(angle)
    # Define the joint indices
    joint_indices = {
        'Left Shoulder': (23, 11, 13),
        'Right Shoulder': (24, 12, 14),
        'Left Elbow': (11, 13, 15),
        'Right Elbow': (12, 14, 16),
        'Left Wrist': (19, 15, 13),
        'Right Wrist': (20, 16, 14),
        'Left Hip': (24, 23, 25),
        'Right Hip': (23, 24, 26),
        'Left Knee': (23, 25, 27),
        'Right Knee': (24, 26, 28),
        'Left Ankle': (31, 27, 25),
        'Right Ankle': (32, 28, 26)
    }
    # Create a dataframe to store the joint angles
    df_joint_angles = pd.DataFrame(columns=list(joint_indices.keys()))
    # Loop through each second of the video
    for i in range(len(df_pose)):
        # Get the pose landmarks for the current second
        pose_landmarks = df_pose.iloc[i, :].values
        # Calculate the joint angles
        joint_angles = {}
        for joint, indices in joint_indices.items():
            try:
                p1, p2, p3 = pose_landmarks[indices[0]][:3], pose_landmarks[indices[1]][:3], pose_landmarks[indices[2]][:3]
                angle = get_joint_angle(p1, p2, p3)
                joint_angles[joint] = angle
            except:
                joint_angles[joint] = np.nan
        # Add the joint angles to the dataframe
        df_joint_angles.loc[df_pose.index[i]] = joint_angles
    return df_joint_angles

def main(page : ft.Page):
    def update_images():
        play = page.session.get("play_state")
        cap = cv2.VideoCapture(0)
        global datas
        datas = pd.DataFrame()
        while(cap.isOpened()):
            # Capture frame-by-frame
            ret, frame = cap.read()
            if ret == True and play == True:
                frame, data = process(cap = cap)
                datas = pd.concat([data, datas], ignore_index=True)
                # encode the resulting frame
                jpg_img = cv2.imencode('.jpg', frame)
                if jpg_img is not None:
                    b64_string = base64.b64encode(jpg_img[1]).decode('utf-8')
                    image_box.src_base64 = b64_string
                    page.update()
            else:
                #page.session.set("data", datas)
                #print(page.session.get('data'))
                break
            page.session.set('play_state', False)
            time.sleep(1/115)

    b64_string = ""        
    image_box = ft.Image(src_base64=b64_string, width=500, height=600)
    video_container = ft.Container(image_box, alignment=ft.alignment.center, expand=True)
    page.add(ft.Row([
        video_container]  
    ))
    def theme_changed(e):
        page.theme_mode = (
            ft.ThemeMode.DARK
            if page.theme_mode == ft.ThemeMode.LIGHT
            else ft.ThemeMode.LIGHT
        )
        page.update()
        
    color_discrete_map={
                        'Right Shoulder': '#ff8000',
                        'Right Elbow': '#ffb266', 
                        'Right Wrist': '#ffe5cc', 
                        'Left Shoulder': '#ff0000',
                        'Left Elbow': '#ff6666', 
                        'Left Wrist': '#ffcccc',
                        'Right Hip': '#7f00ff',
                        'Right Knee': '#b266ff', 
                        'Right Ankle': '#e5ccff',
                        'Left Hip': '#0000ff',
                        'Left Knee': '#6666ff', 
                        'Left Ankle': '#ccccff'
                        }
    
    def vel_data(df_joints):
        df_joints['mean'] = df_joints.diff(10).mean(axis=1)
        x_data = df_joints.index.to_list()
        y_data = df_joints['mean'].to_list()
        max_x = max(x_data)
        dp = []
        for x, y in zip(x_data, y_data):
            dp.append(ft.LineChartDataPoint(x, y, tooltip = f"Velocity", show_below_line = True))
            line_chart_data = (ft.LineChartData(
                data_points=
                    dp
                    ,
                stroke_width=2,
                color=ft.colors.GREEN_200,
                below_line_gradient = ft.colors.GREEN_100, 
                curved=True,
                stroke_cap_round=True))

        data_1 = ([line_chart_data])

        chart = ft.LineChart(
            data_series=data_1,
            border=ft.Border(
                bottom=ft.BorderSide(4, ft.colors.with_opacity(0.5, ft.colors.ON_SURFACE))
            ),
            left_axis=ft.ChartAxis(
                labels=[
                    ft.ChartAxisLabel(
                        value=0,
                        label=ft.Text("0", size=14, weight=ft.FontWeight.BOLD),
                    ),
                    ft.ChartAxisLabel(
                        value=90,
                        label=ft.Text("90", size=14, weight=ft.FontWeight.BOLD),
                    ),
                    ft.ChartAxisLabel(
                        value=180,
                        label=ft.Text("180", size=14, weight=ft.FontWeight.BOLD),
                    ),
                ],
                labels_size=40, show_labels = True
            ),
            tooltip_bgcolor=ft.colors.with_opacity(0.8, ft.colors.BLUE_GREY),
            min_y=0,
            max_y=180,
            min_x=0,
            max_x=max_x,
            animate=5,
            expand=True,
        )
        return chart

    def chart_data(df_joints):
        line_chart_data = []
        for joint in df_joints.columns:
            x_data = df_joints.index.to_list()
            y_data = df_joints[joint].to_list()
            max_x = max(x_data)
            dp = []
            for x, y in zip(x_data, y_data):
                dp.append(ft.LineChartDataPoint(x, y, tooltip = f"{joint}", show_below_line = True))
                line_chart_data.append(ft.LineChartData(
                    data_points=
                        dp
                        ,
                    stroke_width=2,
                    color=color_discrete_map[joint],
                    curved=True,
                    stroke_cap_round=True))

        data_1 = (line_chart_data)

        chart = ft.LineChart(
            data_series=data_1,
            border=ft.Border(
                bottom=ft.BorderSide(4, ft.colors.with_opacity(0.5, ft.colors.ON_SURFACE))
            ),
            left_axis=ft.ChartAxis(
                labels=[
                    ft.ChartAxisLabel(
                        value=0,
                        label=ft.Text("0", size=14, weight=ft.FontWeight.BOLD),
                    ),
                    ft.ChartAxisLabel(
                        value=90,
                        label=ft.Text("90", size=14, weight=ft.FontWeight.BOLD),
                    ),
                    ft.ChartAxisLabel(
                        value=180,
                        label=ft.Text("180", size=14, weight=ft.FontWeight.BOLD),
                    ),
                ],
                labels_size=40, show_labels = True
            ),
            tooltip_bgcolor=ft.colors.with_opacity(0.8, ft.colors.BLUE_GREY),
            min_y=0,
            max_y=180,
            min_x=0,
            max_x=max_x,
            animate=5,
            expand=True,
        )
        return chart

    page.theme_mode = ft.ThemeMode.DARK

    page.appbar = ft.AppBar(
        leading=ft.Icon(ft.icons.PANORAMA_PHOTOSPHERE),
        leading_width=40,
        title=ft.Text("MotionSense"),
        center_title=False,
        bgcolor=ft.colors.SURFACE_VARIANT,
        actions=[ft.Switch(label="Theme", on_change=theme_changed)]
            )
    def run_images(e):
        update_image_thread = threading.Thread(target=update_images)
        update_image_thread.daemon = True
        update_image_thread.start()
    def switch_state(e):
        if page.navigation_bar.selected_index == 0:
            page.session.set('play_state', True)
            run_images(e)
        if page.navigation_bar.selected_index == 2:
            page.session.set('play_state', False)
            run_images(e)
            df_pose = datas
            global df_angles
            df_angles = calculate_joint_angles(df_pose)
        if page.navigation_bar.selected_index == 1:
            chart = chart_data(df_angles.round(2))
            dlg = ft.AlertDialog(
            content=chart, content_padding = None
            )
            page.dialog = dlg
            dlg.open = True
            page.update()

    page.navigation_bar = ft.NavigationBar(
        destinations=[
            ft.NavigationDestination(icon=ft.icons.PLAY_CIRCLE, 
                                     label="Record", selected_icon = ft.icons.VIDEO_CAMERA_FRONT),
            ft.NavigationDestination(icon=ft.icons.HELP, 
                                     label="Help", selected_icon = ft.icons.HELP),
            ft.NavigationDestination(icon=ft.icons.STOP, 
                                     label="Stop", selected_icon = ft.icons.STOP)
        ],  on_change = switch_state, selected_index = 1
    )






    page.update()


ft.app(target=main, view = None)
